rules_version = '2';
service cloud.firestore {
	match /databases/{database}/documents {
		
		function isAuthorOf(res) {
			return request.auth != null && request.auth.uid == res.data.author;
		}

		function isOwnerOf(res) {
			return request.auth != null && request.auth.uid == res.id;
		}

		match /notes/{note} {
			allow get: if resource.data.publicAccess || isAuthorOf(resource);
			allow list: if isAuthorOf(resource);

			allow create: if isAuthorOf(request.resource);
			allow update: if isAuthorOf(resource) && isAuthorOf(request.resource);
			allow delete: if isAuthorOf(resource);
		}

		match /users/{user} {
			allow read;

			allow create: if isOwnerOf(request.resource);
			allow update: if isOwnerOf(resource) && isOwnerOf(request.resource);
			allow delete: if isOwnerOf(resource);
		}
	}
}